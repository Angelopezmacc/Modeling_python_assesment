# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FRzhYdVC5t8p7CofObSN0krCRKV_35HD

**Python assesment**

4. Debugging
"""

# 1
# The index 5 is out of range because the list index begins at 0

numbers = [1, 2, 3, 4, 5]
print(numbers[4])

# 2
# ´15´ its an string and not a number and also, the lenght of the two list do not match

import pandas as pd

data = {'Name': ['Alice', 'Bob', 'Charlie', 'Ángel'],
'Age': [25, 30, 28, 15]}
df = pd.DataFrame.from_dict(data)
print(df)

# 3
# is value_counts not values_count

import pandas as pd

data = {'Name': ['Alice', 'Bob', 'Charlie'],
'Age': [25, 30, 28]}
df = pd.DataFrame(data)
print(df.value_counts())

# 4
# Division by zero its not possible. The variable denominator has to be different of zero


def divide_numbers(a, b):
  try:
    result = a / b
    return result
  except ZeroDivisionError as e:
    return f"Error: {e}"

numerator = 10
denominator = 1
result = divide_numbers(numerator, denominator)
print(result)

"""3. Visualization"""

# 1
import matplotlib.pyplot as plt # import th library

# Define the data
months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul',
'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
average_temps = [10, 12, 15, 20, 25, 30, 32,
31, 28, 22, 15, 12]

# create the line plot
plt.plot(months, average_temps)
plt.xlabel('Month')
plt.ylabel('Average Temperature (°C)')
plt.title('Monthly Average Temperature in Bogotá')
plt.show()

# 2
import numpy as np
import pandas as pd
from datetime import datetime
import seaborn as sns
import matplotlib.pyplot as plt

# Generate sample data
  np.random.seed(42)
  start_date = datetime(2022, 1, 1)
  end_date = datetime(2023, 12, 31)
  date_range = pd.date_range(start=start_date, end=end_date, freq='D')
  data = {
  'Date': np.random.choice(date_range, size=500),
  'SalesAmount': np.random.randint(1000, 5000, size=500)
}
df = pd.DataFrame(data)
# Ensure the data is sorted by date
data = df.sort_values(by='Date')


data = df.sort_values(by='Date')
data['Month'] = data['Date'].dt.month_name()
data['Year'] = data['Date'].dt.year
grouped_data = data.groupby(['Month', 'Year'])['SalesAmount'].sum().reset_index() #AI help
sns.barplot(x='Month', y='SalesAmount', hue='Year', data=grouped_data) #AI help
plt.xlabel('Month')
plt.ylabel('Total Sales Amount')
plt.title('Monthly Total Sales Amount by Year')

plt.xticks(rotation=45) #IA help
plt.show()

# 3
import plotly.express as px

car_data = {
  'ModelName': ['Toyota Camry', 'Honda Civic', 'Ford Mustang',
  'Chevrolet Corvette', 'BMW 3 Series', 'Audi A4',
  'Tesla Model S', 'Subaru Impreza', 'Mazda CX-5',
  'Nissan Altima'],
  'Price': [25000, 22000, 40000, 65000, 35000, 40000, 75000,
  22000, 28000, 24000],
  'Horsepower': [203, 158, 450, 495, 255, 248, 670, 152, 187, 182],
  'FuelEfficiency': [32, 36, 20, 15, 28, 27, 100, 30, 26, 34]
}

df = pd.DataFrame(car_data)

fig = px.scatter(df, x='Price', hover_name='ModelName',  color='FuelEfficiency',size='FuelEfficiency', color_continuous_scale='Viridis' ) #AI help
fig.update_layout( xaxis_title='Price ($)', yaxis_title='Horsepower (hp)', title='Price vs Horsepower by Fuel Efficiency' )

fig.show()

"""2. Data Structures
 - > 2.1 lists
"""

# 1
favorite_fruits = ['apple', 'orange', 'grapes']


# 2
favorite_fruits.append('blueberry')

# 3
favorite_fruits.pop(1)

# 4
if 'banana' in favorite_fruits: print('Yes, banana is in the list')
else: print('No, banana is not in the list')

# 5
for fruit in favorite_fruits: print(fruit)

# 6
numbers = [1,5,7,10]
def Average(lst):
    return sum(lst) / len(lst)
print('The average is', Average(numbers))

# 7
duplicates = [1,7,1,27]
duplicates = list(dict.fromkeys(duplicates))
print(duplicates)

# 8
names = ['Johana', 'Ángel', 'Bob']
names.sort()
print(names)

# 9
numbers = [10, 20, 30, 70, 40, 50]
sorted_numbers = sorted(numbers, reverse=True)
print(sorted_numbers[1])

# 10